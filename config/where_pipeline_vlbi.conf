# This is the WHERE configuration file for the VLBI pipeline. It is read and handled by the where.config module, and
# further documentation can be found there.

[vlbi__vgos]
filekey_suffix              = vgos, vlbi
delay                       = vlbi_vacuum_delay, troposphere_radio, vlbi_cable_cal,
                              vlbi_axis_offset, vlbi_therm_deform, vlbi_grav_delay, vlbi_geometric_delay,
delay:add_sections
estimate_constant           = vlbi_baseline, vlbi_eop_nut, vlbi_eop_pm, vlbi_eop_pm_rate, vlbi_eop_dut1,
                              vlbi_eop_lod
estimate_constant:add_sections

[vlbi__vgoslike]
estimate_constant           = vlbi_baseline, vlbi_eop_nut, vlbi_eop_pm, vlbi_eop_pm_rate, vlbi_eop_dut1,
                              vlbi_eop_lod
estimate_constant:add_sections


# Do not apply non-tidal atmospheric loading for ITRF2020
[vlbi__itrf2020b]
site                        = ocean_tides, solid_tides, solid_ptides, ocean_ptides, atm_tides,
                              eccentricity
site:add_sections

[vlbi]
# TODO??
#sections                    = eop
#sections:add_sections
skip_stages                 =
filekey_suffix              = vlbi
arc_length                  = 1
web_map                     = False
plot_map                    = True
# Input
obs_format                  = vgosdb
get_session_from_master     = True

# Apriori
ocean_tides                 = tpxo7.2_no_cmc
ocean_tides_cmc             = False
atmospheric_tides_cmc       = False
celestial_reference_frames  = icrf3:sx, vlbi_obs
reference_frames            = itrf:2014, vtrf, custom, vlbi_obs
eop_remove_leap_seconds     = True

# Editors and removers
editors                     = analysis_status, vlbi_cable_calibration, vlbi_meteorological_data
editors:add_sections
removers                    = vlbi_data_quality, vlbi_iono_quality, elevation, ignore_station, ignore_epochs,
                              vlbi_ignore_baseline, vlbi_ignore_source, ignore_observation, vlbi_ignore_nan
removers:add_sections       = removers

# Calculate theoretical delay
calculate_max_iterations    = 10
calculate_outlier_limit     = 8
calculate_outlier_limit:library
calculate_outlier_limit:help= discard obs if calculate residual > calculate_outlier_limit * root mean square of residuals
store_outliers              = True
store_outliers:help         = Observations marked as outliers based on 'rms * calculate_outlier_limit' are added to the ignore_observation block
site                        = ocean_tides, solid_tides, solid_ptides, ocean_ptides, atm_tides,
                              eccentricity, nt_atm_loading
#site:add_sections           = model # TODO namespace on sections?
site:add_sections
delay                       = vlbi_vacuum_delay, troposphere_radio, vlbi_ionosphere, vlbi_cable_cal,
                              vlbi_axis_offset, vlbi_therm_deform, vlbi_grav_delay, vlbi_geometric_delay,
                              vlbi_grav_deform
#delay:add_sections          = model # TODO namespace on sections?
delay:add_sections
delay_corr                  = vlbi_clock_poly
delay_corr:add_sections

detect_clockbreaks          = False
detect_clockbreaks:help     = Attempt to automatically detect clock breaks during analysis?
detect_clockbreaks:wizard

# Parameters to estimate
estimate_max_iterations     = 2
estimate_outlier_limit      = 3
estimate_outlier_limit:help = discard obs if estimate residual > estimate_outlier_limit * root mean square of residuals
estimate_method             = cpwl
estimate_constraint         =
#estimate_constraint         = nnt, nnr, nnr_crf
estimate_constraint:add_sections
estimate_stochastic         = trop_wet, trop_grad, vlbi_clock
estimate_stochastic:add_sections
estimate_constant           = vlbi_site_pos, vlbi_eop_nut, vlbi_eop_pm, vlbi_eop_pm_rate, vlbi_eop_dut1,
                              vlbi_eop_lod, vlbi_src_dir
estimate_constant:help      = Parameters to estimate as constant
estimate_constant:type      = List[enum[...]]
estimate_constant:add_sections

estimate_obs_rejectors      = rms, vlbi_obs_per_source
estimate_obs_rejectors:help = Which algorithms to use to discard observations between iterations
estimate_obs_rejectors:add_sections
estimate_obs_rejectors_independent = False
estimate_obs_rejectors_independent:help = Flag to indicate whether the rejectors are applied independently or sequentially

# Output
output                      = vlbi_baseline_stats, parameter_corrections, sinex, timeseries
output:add_sections
files_to_publish            = output_sinex
files_to_publish:help       = List of file keys to publish

[runner]
skip_sessions               = XF, XX
# Intensive and 24hour sessions are in the same master files from before 1992. To skip intensive these intensive sessions
# use the option below
#skip_sessions = XU, D
session_types               =
check_master_status         = False

# Profile: Intensives
[vlbi__intensives]
obs_format                  = vgosdb
filekey_suffix              = intensives, vlbi
estimate_stochastic         =
estimate_stochastic:add_sections
estimate_constant           = trop_wet, vlbi_eop_dut1
estimate_constant:add_sections


# Profile: VASCC
[vlbi__vascc]
filekey_suffix              = vascc, vlbi
sessions                    = NH, SH
arc_length                  = 16
obs_format                  = vgosdb
skip_stages                 = estimate
ocean_tides                 = vascc_ocean_loading_FES2004
delay                       = vlbi_vacuum_delay, troposphere_radio, vlbi_axis_offset, vlbi_thermal_deformation,
                              vlbi_grav_delay, vlbi_geometric_delay
delay:add_sections
delay_corr                  =
site                        = ocean_tides, solid_tides, solid_pole_tides, ocean_pole_tides
eop_models                  = ortho_eop, pmsdnut2, utlibr
estimate_method             =
estimate_constraint         =
estimate_stochastic         =
estimate_constant           =
output                      = vlbi_vascc_calc
mean_pole_version           = 2010
reference_frames            = vascc
celestial_reference_frames  = vascc

[troposphere_radio]
mapping_function            = vmf1_gridded
meteorological_data         = site_pressure
zenith_hydrostatic_delay    = saastamoinen
zenith_wet_delay            = vmf1_gridded
gradients                   = apg

# Use VMF1 station files for ITRF2020 since these go back to 1979
[troposphere_radio__itrf2020b]
mapping_function            = vmf1_station
meteorological_data         = site_pressure
zenith_hydrostatic_delay    = saastamoinen
zenith_wet_delay            = vmf1_station
gradients                   = apg

[troposphere_radio__vascc]
mapping_function            = gmf
gradients                   = none
meteorological_data         = site_pressure

[elevation__vascc]
cut_off                     = 0


######################################################################
#
# EDITORS
#
[analysis_status]
status                      = unchecked
status:library


######################################################################
#
# REMOVERS
#
[vlbi_data_quality]
threshold                   = 0
threshold:help              = Observations with quality value higher than threshold will be removed

[vlbi_iono_quality]
threshold                   = 0
threshold:help              = Observations with ionosphere quality value lower than threshold will be removed

[elevation]
cut_off                     = 0
cut_off:help                = Observation below cut-off angle will be removed
cut_off:type                = float(min=0, max=90)
cut_off:unit                = degrees

[ignore_station]
stations                    =
stations:library

[ignore_epochs]
intervals                   =
intervals:library

[ignore_observation]
observations                =
observations:library

[vlbi_ignore_baseline]
baselines                   =
baselines:library

[vlbi_ignore_source]
sources                     =
sources:library


######################################################################
#
# MODELS
#
# Clock correction specification
[vlbi_clock_poly]
order_of_polynomial          = 2
baseline_clock_offsets       = 
baseline_clock_offsets:library
baseline_clock_offsets:help  = list of baselines to estimate clock offsets for
bco_limit                    = 3
bco_limit:help               = estimate bco if baseline mean value > bco_limit * root mean square of residuals
clock_breaks                 =
clock_breaks:library
reference_clock              =
reference_clock:library
store_bco                    = True
store_bco:help               = whether to store the automatically determined baseline clock offsets in the configuration file



# Cable calibration
[vlbi_cable_calibration]
ignore_cable                =
ignore_cable:library

[vlbi_meteorological_data]
ignore_pressure             =
ignore_pressure:library
ignore_pressure:help        = list of station names with bad pressure data
ignore_temperature          =
ignore_temperature:library
ignore_temperature:help     = list of station names with bad temperature data


[eccentricity]
identifier = station, site_id
######################################################################
#
# PARAMETERS USED IN ESTIMATION
#

# Clock estimate
[vlbi_clock]
skip_stations               =
skip_stations:library
skip_stations:help          = comma separated list of station names to skip clock parameter
knot_interval               = 3600
knot_interval:library
process_noise               = 100
apriori_stdev               = 1
apriori_rate_stdev          = 1
unit                        = m
display_unit                = meter

# Polar motion estimate, 1 rate per session
[vlbi_eop_pm]
knot_interval               =
process_noise               =
apriori_stdev               = 100
apriori_rate_stdev          =
unit                        = mas
display_unit                = milliarcsecond

[vlbi_eop_pm_rate]
knot_interval               =
process_noise               =
apriori_stdev               = 100
apriori_rate_stdev          =
unit                        = masD
display_unit                = milliarcsecond per day

# Celestial pole offset
[vlbi_eop_nut]
process_noise               =
knot_interval               =
apriori_stdev               = 100
apriori_rate_stdev          =
unit                        = mas
display_unit                = milliarcsecond

# Polar motion estimate, 1 rate per session
[vlbi_eop_dut1]
process_noise               =
knot_interval               =
apriori_stdev               = 10
apriori_rate_stdev          =
unit                        = ms
display_unit                = millisecond

[vlbi_eop_dut1_rate]
process_noise               =
knot_interval               =
apriori_stdev               = 10
apriori_rate_stdev          =
unit                        = millisec per day
display_unit                = millisec per day


[vlbi_eop_lod]
process_noise               =
knot_interval               =
apriori_stdev               = 10
apriori_rate_stdev          =
unit                        = ms
display_unit                = millisecond

# Radio sources
# Some radio sources may be fixed. Valid options: defining, special, vcs, non_vsc, undefined, or iers-name of source(s)
[vlbi_src_dir]
fix_sources                 =
fix_sources:library
fix_sources:help            = comma separated list of name of sources or group of sources to keep fixed
except_sources              =
except_sources:library
knot_interval               =
process_noise               =
apriori_stdev               = 2.5e-7
apriori_rate_stdev          =
unit                        = rad
display_unit                = milliarcsec

# Station positions
[vlbi_site_pos]
fix_stations                =
fix_stations:library
fix_stations:help           = comma separated list of name of stations to keep fixed 
knot_interval               =
process_noise               =
apriori_stdev               = 1
apriori_rate_stdev          =
unit                        = m
display_unit                = meter


# Baselines
[vlbi_baseline]
knot_interval               =
process_noise               =
apriori_stdev               = 1
apriori_rate_stdev          =
unit                        = m
display_unit                = meter

####
# Constraints 
# TODO: These constraints are not read by the code yet
#
[nnt_trf]
sigma = 1.5e-11
unit = rad
reference_frame =
reference_frame:help        = Defaults to first reference frame in apriori reference frame list
skip_stations               =
skip_stations:library
skip_stations:help          = Stations to exclude from the NNT condition

[nnr_trf]
sigma = .0001
unit = meter
#reference_frame =
#reference_frame:help        = Defaults to first reference frame in apriori reference frame list
skip_stations               =
skip_stations:library
skip_stations:help          = Stations to exclude from the NNR condition

[nnr_crf]
sigma = 1e-6
unit = rad
reference_frame =
reference_frame:help        = Defaults to first reference frame in apriori reference frame list
skip_sources                =
skip_sources:library
skip_sources:help           = Sources to exclude from the NNR condition 


################################################################################
#
# OUTLIER DETECTION
[rms]
field                   = residual
field:help              = Field used to detect outliers
outlier_limit           = 3
outlier_limit:help      = Observations outside outlier_limit * rms are removed


#######################################################################################################################
#
# TIMESERIES
#
# IDENTIFIER        OPTIONS               DESCRIPTION
#______________________________________________________________________________________________________________________
# label             <num>                 Dataset identifier used for naming of time series dataset. Placeholder
#                                         {dataset_id} can be used.
# dataset_name      <name>                Dataset name used for naming of time series dataset. Placeholders like {tech}
#                                         or {dataset_name} can be used.
# func              <func:field[-stage]>  Define functions used for given dataset fields. Following functions can be #                                         used:
#                                           num:<field>-<stage> - calculate number of data from given dataset field
#                                           num_clock_breaks    - calculate number of clock breaks (only used for VLBI)
#                                           rms:<field>-<stage> - calculate rms of data from given dataset field   
# index             <field_names>         Fields to group over
# state             <field_names>         State vector fields included in the time series
# statistics                              Statistics fields included from dataset meta information
# text              <field_names>         Text fields included in the time series 
#

# Writer for full timeseries
[timeseries]
index                       = station
dataset_id                  = 0
statistics                  = variance factor, degrees of freedom
# rms                         =
# num_obs                     =
func                        = num:obs-calculate, num:obs-estimate, rms:residual-calculate, rms:residual-estimate,
                              num_clock_breaks, count:station-estimate
state                       = ${vlbi:estimate_constant}, ${vlbi:estimate_stochastic}

# Writer for Sinex file

[sinex__itrf2020b]
solution                    = 2020b

[sinex]
blocks                      = file_reference, file_comment, input_acknowledgements, nutation_data, precession_data,
                              source_id, site_id, site_eccentricity, solution_epochs, solution_statistics,
                              solution_estimate, solution_apriori, solution_normal_equation_vector,
                              solution_normal_equation_matrix:U
solution                    = 2020a
solution:help               = 5 letter code to identify the solution
analyst                     =
analyst:help                = User name of analyst (defaults to current user)
contacts                    =
contacts:help               = E-mail address of relevant contacts
file_agency                 = nma
file_agency:help            = 3-letter code for agency creating the sinex file 
data_agency                 = nma
data_agency:help            = 3-letter code for agency providing the data in the sinex file 
