# This is the WHERE configuration file. It is read and handled by the where.config module, and further documentation
# can be found there.

[slr]
skip_stages                 =
filekey_suffix              = slr
arc_length                  = 7
archive_session_fields      =
satellites                  = lageos1, lageos2, etalon1, etalon2
removers                    = slr_handling, ignore_observation
removers:add_sections
editors                     = slr_handling, analysis_status
editors:add_sections
prediction_providers        = sgf nsgf hts htsi itt jax jaxa mcc esa gfz sha cne cnes stp aas cos utx csr esoc gal isro
                              ist iam kai kgs gsf g926 nrl dgf
gravity_field               = EGM2008
gravity_truncation_level    = 20
integrate_method            = cowell
orbit_step_length           = 60
orbit_models                = gravity_earth, gravity_bodies, solar_radiation_pressure, relativistic, empirical, tides
orbit_models:add_sections
force_parameters            = empirical
satellite_models            = slr_range
kinematic_models            = troposphere_optical, slr_center_of_mass, slr_relativistic, slr_range_bias
site                        = ocean_tides, solid_tides, solid_ptides, ocean_ptides, atm_tides,
                              eccentricity
site:add_sections
iterations                  = 2
orbit_ocean_tides           = fes2004
celestial_reference_frames  = icrf3:sx
reference_frames            = itrf:2014, slrf, custom
apriori_orbit               =
stage_iterate               = read, edit, calculate
stage_once                  = estimate, write
stage_iterate_over          = satellites:sat_name
eop_models                  = pmsdnut2, utlibr, rg_zont2, hf_eop_xyu

# Parameters to estimate
estimate_max_iterations     = 2
estimate_outlier_limit      =
estimate_method             = cpwl
estimate_stochastic         = slr_eop_pm, slr_eop_lod, slr_eop_dut1
estimate_stochastic:help    = Parameters to estimate as constant
estimate_stochastic:type    = List[enum[...]]
estimate_stochastic:add_sections
estimate_constant           = slr_range_bias, slr_time_bias, slr_site_pos
estimate_constant:help      = Parameters to estimate as constant
estimate_constant:type      = List[enum[...]]
estimate_constant:add_sections

estimate_outlier_detection         = rms
estimate_outlier_detection:help    = Which algorithms to use for outlier detection
estimate_outlier_detection:add_sections

neq_constraints
#neq_constraints             = minimum_trf, minimum_crf
neq_constraints:help        = Constraints added to normal equation system when solving the equations. 
neq_constraints:add_sections

# Input
obs_format                  = crd

# Output
output                      = parameter_corrections, sinex
output:add_sections
report                      =
files_to_publish            = output_sinex
files_to_publish:help       = List of file keys to publish

# Core sites
core_sites                  = 7080, 7090, 7105, 7109, 7109, 7110, 7501, 7810, 7825, 7832,
                              7834, 7836, 7839, 7840, 7849, 7907, 7939, 7941, 8834,
#                              7210, 7403, 7835, 7837
################################################################################
#
# OUTLIER DETECTION
[rms]
field                   = residual
field:help              = Field used to detect outliers
outlier_limit           = 20
outlier_limit:help      = Observations outside outlier_limit * rms are removed

#######################################################
#
# MODELS
[eccentricity]
identifier = site_id

####################################
# PARAMETERS USED IN ESTIMATION STEP
#

# range bias
[slr_range_bias]
epoch                 =
epoch:help            = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                        estimate_constant. Format: HH:MM:SS
knot_interval         = 
knot_interval:help    = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                        'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                        (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                        defined via estimation option 'unit'.
estimate_stations     =
skip_stations         =
skip_stations:library
skip_stations:help    = comma separated list of station names to skip range bias estimation
unit                  = m
display_unit          = m
apriori_stdev         = 1

# time bias
[slr_time_bias]
epoch                 =
epoch:help            = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                        estimate_constant. Format: HH:MM:SS
knot_interval         = 
knot_interval:help    = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                        'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                        (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                        defined via estimation option 'unit'.
estimate_stations     =
skip_stations         =
skip_stations:library
skip_stations:help    = comma separated list of station names to skip range bias estimation
unit                  = m
display_unit          = m
apriori_stdev         = 1

# slr__external_orbit_profile
# Default settings for SLR analyses using external orbits
[slr__external_orbit]
apriori_orbit            = jcet
apriori_orbit_version    = v70
skip_stages              =
filekey_suffix           = slr
arc_length               = 7
archive_session_fields   =
satellites               = lageos1,
orbit_models             =
orbit_models:add_sections
force_parameters         =
kinematic_models         = troposphere_optical, slr_center_of_mass, slr_relativistic
iterations               = 1


# SLR c5pp_profile
[slr__c5pp]
orbit_step_length        = 40
orbit_models             = gravity_earth, gravity_bodies, solar_radiation_pressure, relativistic, empirical
orbit_models:add_sections
ephemerides              = de423
force_parameters         = empirical


# Station positions
[slr_site_pos]
fix_stations                =
fix_stations:library
fix_stations:help           = comma separated list of name of stations to keep fixed
epoch                       =
epoch:help                  = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                              estimate_constant. Format: HH:MM:SS
knot_interval               =
knot_interval:help          = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                              'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                              (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                              defined via estimation option 'unit'.
process_noise               =
apriori_stdev               = 1
apriori_rate_stdev          =
unit                        = m
display_unit                = meter

# EOP

[slr_eop_pm]
epoch                       =
epoch:help                  = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                              estimate_constant. Format: HH:MM:SS
knot_interval               = 86400
knot_interval:help          = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                              'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                              (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                              defined via estimation option 'unit'.
process_noise               = 100
apriori_stdev               = 1
apriori_rate_stdev          = 1
unit                        = mas
display_unit                = milliarcsecond

[slr_eop_lod]
epoch                       =
epoch:help                  = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                              estimate_constant. Format: HH:MM:SS
knot_interval               = 86400
knot_interval:help          = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                              'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                              (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                              defined via estimation option 'unit'.
process_noise               = 100
apriori_stdev               = 10
apriori_rate_stdev          = 1
unit                        = ms
display_unit                = millisecond

[slr_eop_dut1]
epoch                       =
epoch:help                  = Estimation epoch for parameters estimated as pwlo. Only applicable for parameters defined in 
                              estimate_constant. Format: HH:MM:SS
knot_interval               = 86400
knot_interval:help          = Number of seconds for each knot interval for parameters in (1) estimate_stochastic if estimator 
                              'cpwl' (continuous piecewise linear) is used or (2) estimate_constant if epoch is defined
                              (meaning the parameters are estimated as pwlo (piecewise linear offsets). Unit is 
                              defined via estimation option 'unit'.
process_noise               = 100
apriori_stdev               = 10
apriori_rate_stdev          = 10
unit                        = ms
display_unit                = millisecond


######################################################################
#
# EDITORS
#
[analysis_status]
status                      = unchecked
status:library

######################################################################
#
# REMOVERS
#
[ignore_observation]
observations                =
observations:library


######################################################################
#
# MODELS
#
[gravity_bodies]
bodies = sun, moon, jupiter, mars, mercury, neptune, pluto, saturn, uranus, venus

[gravity_bodies__c5pp]
bodies = sun, moon, jupiter, mars, mercury, saturn, venus

[empirical]
empirical_parameters = const_cross, const_along, 1cpr_sin_cross, 1cpr_sin_along, 1cpr_cos_cross, 1cpr_cos_along

[empirical__c5pp]
empirical_parameters = a02


# Writer for Sinex file
[sinex__slr]
blocks                      = file_reference, file_comment, input_acknowledgements, nutation_data, precession_data,
                              site_id, site_eccentricity, solution_epochs, solution_statistics,
                              solution_estimate, solution_apriori, solution_normal_equation_vector,
                              solution_normal_equation_matrix:U
solution                    = blabl
solution:help               = 5 letter code to identify the solution
analyst                     =
analyst:help                = User name of analyst (defaults to current user)
contacts                    =
contacts:help               = E-mail address of relevant contacts
file_agency                 = nma
file_agency:help            = 3-letter code for agency creating the sinex file
data_agency                 = nma
data_agency:help            = 3-letter code for agency providing the data in the sinex file

